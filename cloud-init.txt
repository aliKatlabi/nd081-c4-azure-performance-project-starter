#cloud-config
package_upgrade: true
packages:
  - nginx
  - nodejs
  - npm
  - python3
  - python3-pip
  - build-essential
  - tcl
  - wget
write_files:
  - owner: www-data:www-data
    path: /etc/nginx/sites-available/default
    content: |
      server {
        listen 80;
        location / {
          proxy_pass http://localhost:3000;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection keep-alive;
          proxy_set_header Host $host;
          proxy_cache_bypass $http_upgrade;
        }
      }
  - owner: azureuser:azureuser
    path: /home/azureuser/myapp/index.js
    content: |
      var express = require('express')
      var app = express()
      var os = require('os');
      app.get('/', function (req, res) {
        res.send('<h1>Welcome to Azure VM Scale Set</h1> <h2>Hello World from host ' + os.hostname() + '! </h2>')
      })
      app.listen(3000, function () {
        console.log('Hello world app listening on port 3000!')
      })
runcmd:
  - wget https://download.redis.io/releases/redis-7.4.3.tar.gz
  - tar xzf redis-7.4.3.tar.gz
  - cd redis-7.4.3
  - make
  - make install
  - src/redis-server --daemonize yes

  # Install Python dependencies
  - pip3 install redis flask opencensus opencensus-ext-azure opencensus-ext-flask

  # Clone the application repository
  - git clone --branch Deploy_to_VMSS https://github.com/aliKatlabi/nd081-c4-azure-performance-project-starter.git
  - cd nd081-c4-azure-performance-project-starter/azure-vote

  # Start the Flask application
  - gunicorn -w 4 -b 0.0.0.0:8000 main:app

final_message: "The setup is complete. Your application is running."